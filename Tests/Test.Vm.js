describe('Virtual Machine Integration Tests', function () {
    var vm;
    var bootImage = [
        0x0C, 0x00, 0x00, 0xEA, 0x05, 0x00, 0x00, 0xEA, 0x05, 0x00,
        0x00, 0xEA, 0x05, 0x00, 0x00, 0xEA, 0x05, 0x00, 0x00, 0xEA,
        0x00, 0x00, 0xA0, 0xE1, 0x04, 0x00, 0x00, 0xEA, 0x04, 0x00,
        0x00, 0xEA, 0xFE, 0xFF, 0xFF, 0xEA, 0xFE, 0xFF, 0xFF, 0xEA,
        0xFE, 0xFF, 0xFF, 0xEA, 0xFE, 0xFF, 0xFF, 0xEA, 0xFE, 0xFF,
        0xFF, 0xEA, 0xFE, 0xFF, 0xFF, 0xEA, 0x00, 0x00, 0xA0, 0xE3,
        0x28, 0x10, 0x9F, 0xE5, 0x28, 0x20, 0x9F, 0xE5, 0x02, 0x00,
        0x51, 0xE1, 0x01, 0x00, 0x00, 0x0A, 0x01, 0x00, 0xC1, 0xE4,
        0xFB, 0xFF, 0xFF, 0xEA, 0x12, 0x09, 0xA0, 0xE3, 0x00, 0xD0,
        0xA0, 0xE1, 0x44, 0x00, 0x00, 0xEB, 0x0C, 0x00, 0x9F, 0xE5,
        0x01, 0x10, 0xA0, 0xE3, 0x00, 0x10, 0xC0, 0xE5, 0x00, 0x00,
        0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xC0, 0x1F, 0xE0,
        0x04, 0xB0, 0x2D, 0xE5, 0x00, 0xB0, 0x8D, 0xE2, 0x4E, 0x32,
        0xA0, 0xE3, 0x00, 0x20, 0xA0, 0xE3, 0x00, 0x20, 0x83, 0xE5,
        0xCE, 0x32, 0xA0, 0xE3, 0x80, 0x20, 0xA0, 0xE3, 0x00, 0x20,
        0x83, 0xE5, 0x0E, 0x32, 0xA0, 0xE3, 0x03, 0x20, 0xA0, 0xE3,
        0x00, 0x20, 0x83, 0xE5, 0x4E, 0x32, 0xA0, 0xE3, 0x00, 0x20,
        0xA0, 0xE3, 0x00, 0x20, 0x83, 0xE5, 0xCE, 0x32, 0xA0, 0xE3,
        0x03, 0x20, 0xA0, 0xE3, 0x00, 0x20, 0x83, 0xE5, 0x8E, 0x32,
        0xA0, 0xE3, 0xC7, 0x20, 0xA0, 0xE3, 0x00, 0x20, 0x83, 0xE5,
        0x00, 0x00, 0xA0, 0xE1, 0x00, 0xD0, 0x4B, 0xE2, 0x04, 0xB0,
        0x9D, 0xE4, 0x1E, 0xFF, 0x2F, 0xE1, 0x04, 0xB0, 0x2D, 0xE5,
        0x00, 0xB0, 0x8D, 0xE2, 0x0C, 0xD0, 0x4D, 0xE2, 0x00, 0x30,
        0xA0, 0xE1, 0x05, 0x30, 0x4B, 0xE5, 0x00, 0x00, 0xA0, 0xE1,
        0x28, 0x30, 0x9F, 0xE5, 0x00, 0x30, 0x93, 0xE5, 0x20, 0x30,
        0x03, 0xE2, 0x00, 0x00, 0x53, 0xE3, 0xFA, 0xFF, 0xFF, 0x0A,
        0x0E, 0x22, 0xA0, 0xE3, 0x05, 0x30, 0x5B, 0xE5, 0x00, 0x30,
        0x82, 0xE5, 0x00, 0x00, 0xA0, 0xE1, 0x00, 0xD0, 0x4B, 0xE2,
        0x04, 0xB0, 0x9D, 0xE4, 0x1E, 0xFF, 0x2F, 0xE1, 0x14, 0x00,
        0x00, 0xE0, 0x00, 0x48, 0x2D, 0xE9, 0x04, 0xB0, 0x8D, 0xE2,
        0x08, 0xD0, 0x4D, 0xE2, 0x08, 0x00, 0x0B, 0xE5, 0x06, 0x00,
        0x00, 0xEA, 0x08, 0x30, 0x1B, 0xE5, 0x00, 0x30, 0xD3, 0xE5,
        0x03, 0x00, 0xA0, 0xE1, 0xE3, 0xFF, 0xFF, 0xEB, 0x08, 0x30,
        0x1B, 0xE5, 0x01, 0x30, 0x83, 0xE2, 0x08, 0x30, 0x0B, 0xE5,
        0x08, 0x30, 0x1B, 0xE5, 0x00, 0x30, 0xD3, 0xE5, 0x00, 0x00,
        0x53, 0xE3, 0xF4, 0xFF, 0xFF, 0x1A, 0x00, 0x00, 0xA0, 0xE1,
        0x04, 0xD0, 0x4B, 0xE2, 0x00, 0x48, 0xBD, 0xE8, 0x1E, 0xFF,
        0x2F, 0xE1, 0x00, 0x48, 0x2D, 0xE9, 0x04, 0xB0, 0x8D, 0xE2,
        0xBD, 0xFF, 0xFF, 0xEB, 0x48, 0x00, 0xA0, 0xE3, 0xD3, 0xFF,
        0xFF, 0xEB, 0x61, 0x00, 0xA0, 0xE3, 0xD1, 0xFF, 0xFF, 0xEB,
        0x00, 0x30, 0xA0, 0xE3, 0x03, 0x00, 0xA0, 0xE1, 0x04, 0xD0,
        0x4B, 0xE2, 0x00, 0x48, 0xBD, 0xE8, 0x1E, 0xFF, 0x2F, 0xE1
    ];
    beforeEach(function () {
        vm = new ARM.Simulator.Vm(6.9824, [
            new ARM.Simulator.Region(0x00000, 0x4000, null, ARM.Simulator.Region.NoWrite, bootImage),
            new ARM.Simulator.Region(0x40000, 0x8000, null, null)
        ]);
        var pic = new ARM.Simulator.Devices.PIC(0xE00010000, function (active_irq) {
            vm.Cpu.nIRQ = !active_irq;
        }, function (active_fiq) {
            vm.Cpu.nFIQ = !active_fiq;
        });
        vm.RegisterDevice(pic);
        var devices = [
            new ARM.Simulator.Devices.TL16C750(0xE0000000, function (active) { return pic.SetSignal(0, active); }),
        ];
        for (var _i = 0, devices_1 = devices; _i < devices_1.length; _i++) {
            var dev = devices_1[_i];
            expect(vm.RegisterDevice(dev)).toBe(true);
        }
        vm.on('TL16C750.Data', function (e) {
            console.log(String.fromCharCode(e));
        });
    });
    it('Should run', function () {
        var fu = vm;
        vm.RunFor(1000);
    });
});
//# sourceMappingURL=Test.Vm.js.map